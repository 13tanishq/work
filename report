@Autowired
private ExceptionHandlingService validationService; // exposes validateOrFail(Object dto)

// Build invalid EmailRequest to trigger violations
private EmailRequest invalidEmail() {
    EmailRequest req = new EmailRequest();
    req.setFromAddress("");      // invalid
    req.setSndcod(null);         // missing

    ReceiverInfo ri = new ReceiverInfo();
    ri.setToAddresses(List.of("")); // invalid
    ri.setSingleEmail(true);
    req.setReceiverInfo(ri);

    Data data = new Data();
    data.setBody("");            // invalid
    data.setSubject("");         // invalid
    req.setData(data);

    return req;
}

// Build valid EmailRequest to pass validation
private EmailRequest validEmail() {
    EmailRequest req = new EmailRequest();
    req.setFromAddress("sender@test.com");
    req.setSndcod("ABC"); // adjust to your rule

    ReceiverInfo ri = new ReceiverInfo();
    ri.setToAddresses(List.of("rcpt@test.com"));
    ri.setSingleEmail(true);
    req.setReceiverInfo(ri);

    Data data = new Data();
    data.setBody("Hello");
    data.setSubject("Subject");
    req.setData(data);

    return req;
}

@Test
void invalid_shouldPrintViolations() {
    EmailRequest req = invalidEmail();

    ResponseEntity<?> resp = validationService.validateOrFail(req);

    if (resp == null) {
        System.out.println("FAIL: expected violations but got none");
        return;
    }

    System.out.println("STATUS = " + resp.getStatusCode());
    Object body = resp.getBody();
    // Expecting List<Violation> where Violation has getField() and getMessage()
    if (body instanceof java.util.List<?> list) {
        System.out.println("Violations:");
        for (Object o : list) {
            try {
                var field = o.getClass().getMethod("getField").invoke(o);
                var msg   = o.getClass().getMethod("getMessage").invoke(o);
                System.out.println("- " + field + ": " + msg);
            } catch (Exception reflectionErr) {
                System.out.println("- " + o);
            }
        }
    } else {
        System.out.println("Body: " + body);
    }
}

@Test
void valid_shouldPass() {
    EmailRequest req = validEmail();

    ResponseEntity<?> resp = validationService.validateOrFail(req);

    if (resp == null) {
        System.out.println("PASS: no violations");
    } else {
        System.out.println("FAIL: unexpected violations, status=" + resp.getStatusCode());
        System.out.println(resp.getBody());
    }
}
