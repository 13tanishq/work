private Integer resendNotificationsForSndcod(String sndcod, String type, String status) {
    Integer res = null;
    
    // This logic is moved from the main method's 'else' block
    switch (type) {
        case "ACK_NACK": {
            if (status.equalsIgnoreCase("ALL")) {
                res = tdocxmlsicRepository.updateAckNackStatusesBySndcod(sndcod);
            } else if (status.equalsIgnoreCase("NOTIFICATION_SENT") || status.equalsIgnoreCase("NOTIFICATION_FAILURE")) {
                res = tdocxmlsicRepository.updateAckNackStatusesBySndcod(sndcod, status);
            }
            break;
        }
        case "RETURN_STATUS": {
             if (status.equalsIgnoreCase("ALL")) {
                res = returnStatusBankService.resendNotificationsBySndcod(sndcod, null);
            } else if (status.equalsIgnoreCase("NOTIFICATION_SENT") || status.equalsIgnoreCase("NOTIFICATION_FAILURE")) {
                res = returnStatusBankService.resendNotificationsBySndcod(sndcod, status);
            }
            break;
        }
        case "BOTH": {
             if (status.equalsIgnoreCase("ALL")) {
                res = tdocxmlsicRepository.updateAckNackStatusesBySndcod(sndcod);
                res += returnStatusBankService.resendNotificationsBySndcod(sndcod, null);
            } else if (status.equalsIgnoreCase("NOTIFICATION_SENT") || status.equalsIgnoreCase("NOTIFICATION_FAILURE")) {
                res = tdocxmlsicRepository.updateAckNackStatusesBySndcod(sndcod, status);
                res += returnStatusBankService.resendNotificationsBySndcod(sndcod, status);
            }
            break;
        }
    }
    return res;
}
